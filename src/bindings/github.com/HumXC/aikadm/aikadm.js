// @ts-check
// Cynhyrchwyd y ffeil hon yn awtomatig. PEIDIWCH Ã‚ MODIWL
// This file is automatically generated. DO NOT EDIT

// eslint-disable-next-line @typescript-eslint/ban-ts-comment
// @ts-ignore: Unused imports
import {Call as $Call, Create as $Create} from "@wailsio/runtime";

// eslint-disable-next-line @typescript-eslint/ban-ts-comment
// @ts-ignore: Unused imports
import * as user$0 from "../../../os/user/models.js";

// eslint-disable-next-line @typescript-eslint/ban-ts-comment
// @ts-ignore: Unused imports
import * as $models from "./models.js";

/**
 * @param {string[]} command
 * @returns {Promise<number> & { cancel(): void }}
 */
export function Exec(command) {
    let $resultPromise = /** @type {any} */($Call.ByID(3462735578, command));
    return $resultPromise;
}

/**
 * @param {string[]} command
 * @returns {Promise<string> & { cancel(): void }}
 */
export function ExecOutput(command) {
    let $resultPromise = /** @type {any} */($Call.ByID(3710783019, command));
    return $resultPromise;
}

/**
 * @returns {Promise<$models.SessionEntry[]> & { cancel(): void }}
 */
export function GetSessions() {
    let $resultPromise = /** @type {any} */($Call.ByID(3032817680));
    let $typingPromise = /** @type {any} */($resultPromise.then(($result) => {
        return $$createType1($result);
    }));
    $typingPromise.cancel = $resultPromise.cancel.bind($resultPromise);
    return $typingPromise;
}

/**
 * @param {string} username
 * @returns {Promise<string> & { cancel(): void }}
 */
export function GetUserAvatar(username) {
    let $resultPromise = /** @type {any} */($Call.ByID(4285956991, username));
    return $resultPromise;
}

/**
 * @returns {Promise<user$0.User[]> & { cancel(): void }}
 */
export function GetUsers() {
    let $resultPromise = /** @type {any} */($Call.ByID(650693767));
    let $typingPromise = /** @type {any} */($resultPromise.then(($result) => {
        return $$createType3($result);
    }));
    $typingPromise.cancel = $resultPromise.cancel.bind($resultPromise);
    return $typingPromise;
}

/**
 * @param {number} pid
 * @returns {Promise<void> & { cancel(): void }}
 */
export function KillProcess(pid) {
    let $resultPromise = /** @type {any} */($Call.ByID(3398363060, pid));
    return $resultPromise;
}

/**
 * @param {string} username
 * @param {string} password
 * @param {string} session
 * @returns {Promise<void> & { cancel(): void }}
 */
export function Login(username, password, session) {
    let $resultPromise = /** @type {any} */($Call.ByID(3688515196, username, password, session));
    return $resultPromise;
}

/**
 * @returns {Promise<any> & { cancel(): void }}
 */
export function ReadConfig() {
    let $resultPromise = /** @type {any} */($Call.ByID(172711337));
    return $resultPromise;
}

/**
 * @returns {Promise<void> & { cancel(): void }}
 */
export function Reboot() {
    let $resultPromise = /** @type {any} */($Call.ByID(2879686282));
    return $resultPromise;
}

/**
 * @param {any} config
 * @returns {Promise<void> & { cancel(): void }}
 */
export function SaveConfig(config) {
    let $resultPromise = /** @type {any} */($Call.ByID(1481722156, config));
    return $resultPromise;
}

/**
 * @returns {Promise<void> & { cancel(): void }}
 */
export function Shutdown() {
    let $resultPromise = /** @type {any} */($Call.ByID(3462897229));
    return $resultPromise;
}

// Private type creation functions
const $$createType0 = $models.SessionEntry.createFrom;
const $$createType1 = $Create.Array($$createType0);
const $$createType2 = user$0.User.createFrom;
const $$createType3 = $Create.Array($$createType2);
